name: SonarQube Scan with Docker (No Quality Gate)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  sonar-docker:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000
        options: >-
          --memory=4g

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest coverage jq unzip

          # Install sonar-scanner CLI
          curl -sSLo sonar-scanner.zip \
            https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip -d $HOME/
          echo "$HOME/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: Wait for SonarQube startup
        run: |
          echo "⏳ Waiting for SonarQube server to be healthy..."
          for i in {1..60}; do
            STATUS=$(curl -s http://localhost:9000/api/system/status | jq -r '.status')
            echo "Attempt $i: SonarQube status = $STATUS"
            if [ "$STATUS" == "UP" ]; then
              echo "✅ SonarQube is UP!"
              break
            fi
            sleep 5
          done
          if [ "$STATUS" != "UP" ]; then
            echo "❌ SonarQube did not start in time!"
            exit 1
          fi

      - name: Generate SonarQube token
        run: |
          TOKEN=$(curl -s -X POST -u admin:admin \
            -d "name=ci-token" \
            http://localhost:9000/api/user_tokens/generate | jq -r '.token')
          echo "SONAR_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Run tests
        run: |
          coverage run -m pytest || true
          coverage xml || true

      - name: Set SonarQube project key
        run: |
          PROJECT_KEY=${GITHUB_REPOSITORY##*/}
          echo "PROJECT_KEY=$PROJECT_KEY" >> $GITHUB_ENV

      - name: Run Sonar Scanner
        run: |
          sonar-scanner \
            -Dsonar.projectKey=$PROJECT_KEY \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.python.coverage.reportPaths=coverage.xml
