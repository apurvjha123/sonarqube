name: SonarQube Scan with Docker

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  sonar-docker:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -f http://localhost:9000/api/system/health || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies + sonar-scanner
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest coverage

          curl -sSLo sonar-scanner.zip \
            https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip -d $HOME/
          echo "$HOME/sonar-scanner-5.0.1.3006-linux/bin" >> $GITHUB_PATH

      - name: Wait for SonarQube startup
        run: |
          echo "⏳ Waiting for SonarQube server to be healthy..."
          for i in {1..30}; do
            curl -s http://localhost:9000/api/system/status | grep -q '"status":"UP"' && break
            sleep 5
          done

      - name: Run tests + coverage
        run: |
          coverage run -m pytest
          coverage xml

      - name: Run Sonar Scanner
        run: |
          sonar-scanner \
            -Dsonar.projectKey=my_python_project \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=admin \
            -Dsonar.password=admin \
            -Dsonar.python.coverage.reportPaths=coverage.xml

      - name: Check Quality Gate
        run: |
          STATUS=$(curl -s -u admin:admin "http://localhost:9000/api/qualitygates/project_status?projectKey=my_python_project" | jq -r '.projectStatus.status')
          echo "Quality Gate Status: $STATUS"
          if [ "$STATUS" != "OK" ]; then
            echo "❌ SonarQube Quality Gate failed!"
            exit 1
          else
            echo "✅ SonarQube Quality Gate passed!"
